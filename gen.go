// +build ignore

// This program generates list.go. It can be invoked by running
// go generate

package main

import (
	"bytes"
	"fmt"
	"os"

	"github.com/globalsign/publicsuffix"
)

func main() {
	publicsuffix.Update()

	var rules bytes.Buffer
	if err := publicsuffix.Write(&rules); err != nil {
		fmt.Printf("error while encoding the rules: %s\n", err.Error())
		os.Exit(1)
	}

	if err := printFile(rules); err != nil {
		fmt.Printf("error while generating code: %s\n", err.Error())
		os.Exit(1)
	}
}

func printFile(rules bytes.Buffer) error {
	var file, err = os.Create("list.go")
	if err != nil {
		return err
	}

	fmt.Fprintf(file, "// Code generated by publicsuffix/gen.go; DO NOT EDIT\n\n")
	fmt.Fprintf(file, "package publicsuffix\n\nvar initialRelease = `%s`\n\n", publicsuffix.Release())
	fmt.Fprintf(file, "var listBytes = []byte{")

	for _, b := range rules.Bytes() {
		fmt.Fprintf(file, "%#X,", b)
	}

	fmt.Fprintf(file, "}\n")

	return nil
}
